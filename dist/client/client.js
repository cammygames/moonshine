"use strict";(()=>{var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var require_boolean=__commonJS({"node_modules/boolean/build/lib/boolean.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.boolean=void 0;var boolean=function(value){switch(Object.prototype.toString.call(value)){case"[object String]":return["true","t","yes","y","on","1"].includes(value.trim().toLowerCase());case"[object Number]":return value.valueOf()===1;case"[object Boolean]":return value.valueOf();default:return false}};exports2.boolean=boolean}});var require_isBooleanable=__commonJS({"node_modules/boolean/build/lib/isBooleanable.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.isBooleanable=void 0;var isBooleanable=function(value){switch(Object.prototype.toString.call(value)){case"[object String]":return["true","t","yes","y","on","1","false","f","no","n","off","0"].includes(value.trim().toLowerCase());case"[object Number]":return[0,1].includes(value.valueOf());case"[object Boolean]":return true;default:return false}};exports2.isBooleanable=isBooleanable}});var require_lib=__commonJS({"node_modules/boolean/build/lib/index.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.isBooleanable=exports2.boolean=void 0;var boolean_1=require_boolean();Object.defineProperty(exports2,"boolean",{enumerable:true,get:function(){return boolean_1.boolean}});var isBooleanable_1=require_isBooleanable();Object.defineProperty(exports2,"isBooleanable",{enumerable:true,get:function(){return isBooleanable_1.isBooleanable}})}});var require_tokenize=__commonJS({"node_modules/fast-printf/dist/src/tokenize.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.tokenize=void 0;var TokenRule=/(?:%(?<flag>([+0-]|-\+))?(?<width>\d+)?(?<position>\d+\$)?(?<precision>\.\d+)?(?<conversion>[%BCESb-iosux]))|(\\%)/g;var tokenize=subject=>{let matchResult;const tokens=[];let argumentIndex=0;let lastIndex=0;let lastToken=null;while((matchResult=TokenRule.exec(subject))!==null){if(matchResult.index>lastIndex){lastToken={literal:subject.slice(lastIndex,matchResult.index),type:"literal"};tokens.push(lastToken)}const match=matchResult[0];lastIndex=matchResult.index+match.length;if(match==="\\%"||match==="%%"){if(lastToken&&lastToken.type==="literal"){lastToken.literal+="%"}else{lastToken={literal:"%",type:"literal"};tokens.push(lastToken)}}else if(matchResult.groups){lastToken={conversion:matchResult.groups.conversion,flag:matchResult.groups.flag||null,placeholder:match,position:matchResult.groups.position?Number.parseInt(matchResult.groups.position,10)-1:argumentIndex++,precision:matchResult.groups.precision?Number.parseInt(matchResult.groups.precision.slice(1),10):null,type:"placeholder",width:matchResult.groups.width?Number.parseInt(matchResult.groups.width,10):null};tokens.push(lastToken)}}if(lastIndex<=subject.length-1){if(lastToken&&lastToken.type==="literal"){lastToken.literal+=subject.slice(lastIndex)}else{tokens.push({literal:subject.slice(lastIndex),type:"literal"})}}return tokens};exports2.tokenize=tokenize}});var require_createPrintf=__commonJS({"node_modules/fast-printf/dist/src/createPrintf.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.createPrintf=void 0;var boolean_1=require_lib();var tokenize_1=require_tokenize();var formatDefaultUnboundExpression=(subject,token)=>{return token.placeholder};var createPrintf=configuration=>{var _a;const padValue=(value,width,flag)=>{if(flag==="-"){return value.padEnd(width," ")}else if(flag==="-+"){return((Number(value)>=0?"+":"")+value).padEnd(width," ")}else if(flag==="+"){return((Number(value)>=0?"+":"")+value).padStart(width," ")}else if(flag==="0"){return value.padStart(width,"0")}else{return value.padStart(width," ")}};const formatUnboundExpression=(_a=configuration===null||configuration===void 0?void 0:configuration.formatUnboundExpression)!==null&&_a!==void 0?_a:formatDefaultUnboundExpression;const cache2={};return(subject,...boundValues)=>{let tokens=cache2[subject];if(!tokens){tokens=cache2[subject]=tokenize_1.tokenize(subject)}let result="";for(const token of tokens){if(token.type==="literal"){result+=token.literal}else{let boundValue=boundValues[token.position];if(boundValue===void 0){result+=formatUnboundExpression(subject,token,boundValues)}else if(token.conversion==="b"){result+=boolean_1.boolean(boundValue)?"true":"false"}else if(token.conversion==="B"){result+=boolean_1.boolean(boundValue)?"TRUE":"FALSE"}else if(token.conversion==="c"){result+=boundValue}else if(token.conversion==="C"){result+=String(boundValue).toUpperCase()}else if(token.conversion==="i"||token.conversion==="d"){boundValue=String(Math.trunc(boundValue));if(token.width!==null){boundValue=padValue(boundValue,token.width,token.flag)}result+=boundValue}else if(token.conversion==="e"){result+=Number(boundValue).toExponential()}else if(token.conversion==="E"){result+=Number(boundValue).toExponential().toUpperCase()}else if(token.conversion==="f"){if(token.precision!==null){boundValue=Number(boundValue).toFixed(token.precision)}if(token.width!==null){boundValue=padValue(String(boundValue),token.width,token.flag)}result+=boundValue}else if(token.conversion==="o"){result+=(Number.parseInt(String(boundValue),10)>>>0).toString(8)}else if(token.conversion==="s"){if(token.width!==null){boundValue=padValue(String(boundValue),token.width,token.flag)}result+=boundValue}else if(token.conversion==="S"){if(token.width!==null){boundValue=padValue(String(boundValue),token.width,token.flag)}result+=String(boundValue).toUpperCase()}else if(token.conversion==="u"){result+=Number.parseInt(String(boundValue),10)>>>0}else if(token.conversion==="x"){boundValue=(Number.parseInt(String(boundValue),10)>>>0).toString(16);if(token.width!==null){boundValue=padValue(String(boundValue),token.width,token.flag)}result+=boundValue}else{throw new Error("Unknown format specifier.")}}}return result}};exports2.createPrintf=createPrintf}});var require_printf=__commonJS({"node_modules/fast-printf/dist/src/printf.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.printf=exports2.createPrintf=void 0;var createPrintf_1=require_createPrintf();Object.defineProperty(exports2,"createPrintf",{enumerable:true,get:function(){return createPrintf_1.createPrintf}});exports2.printf=createPrintf_1.createPrintf()}});var Delay=ms=>new Promise(res=>setTimeout(res,ms));var GetPropPos=zModifier=>{const offset=GetOffsetFromEntityInWorldCoords(PlayerPedId(),0,.65,0);const[propX,propY,propZ]=offset;const[success,groundZ]=GetGroundZFor_3dCoord(propX,propY,propZ,true);return[propX,propY,success?groundZ+zModifier:propZ]};on("moss:client:useStill",async()=>{emitNet("moss:server:spawnStill",GetPropPos(.22))});onNet("moss:client:setupStill",async netId=>{while(!NetworkDoesEntityExistWithNetworkId(netId)){await Delay(100);console.debug(`Waiting for still with netid ${netId}`)}global.exports.ox_target.addEntity(netId,[{name:"dismantle",label:"Dismantle",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return!Entity(entity).state.running},onSelect:data=>{emitNet("moss:server:dismantleStill",NetworkGetNetworkIdFromEntity(data.entity))}},{name:"open_still",label:"Open Still",distance:2,onSelect:data=>{global.exports.ox_inventory.openInventory("stash",`still_${netId}`)}},{name:"light_still",label:"Light Still",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return!Entity(entity).state.running},onSelect:data=>{emitNet("moss:server:lightStill",NetworkGetNetworkIdFromEntity(data.entity))}}])});var resource_exports={};__export(resource_exports,{Point:()=>Point,addRadialItem:()=>addRadialItem,alertDialog:()=>alertDialog,cancelProgress:()=>cancelProgress,cancelSkillCheck:()=>cancelSkillCheck,closeAlertDialog:()=>closeAlertDialog,closeInputDialog:()=>closeInputDialog,defaultNotify:()=>defaultNotify,disableRadial:()=>disableRadial,eventTimer:()=>eventTimer,getCurrentRadialId:()=>getCurrentRadialId,getOpenContextMenu:()=>getOpenContextMenu,getOpenMenu:()=>getOpenMenu,getVehicleProperties:()=>getVehicleProperties,hideContext:()=>hideContext,hideMenu:()=>hideMenu,hideRadial:()=>hideRadial,hideTextUI:()=>hideTextUI,inputDialog:()=>inputDialog,isTextUIOpen:()=>isTextUIOpen,notify:()=>notify,onServerCallback:()=>onServerCallback,progressActive:()=>progressActive,progressBar:()=>progressBar,progressCircle:()=>progressCircle,registerContext:()=>registerContext,registerMenu:()=>registerMenu,registerRadial:()=>registerRadial,removeRadialItem:()=>removeRadialItem,requestAnimDict:()=>requestAnimDict,requestAnimSet:()=>requestAnimSet,requestModel:()=>requestModel,requestNamedPtfxAsset:()=>requestNamedPtfxAsset,requestScaleformMovie:()=>requestScaleformMovie,requestStreamedTextureDict:()=>requestStreamedTextureDict,requestWeaponAsset:()=>requestWeaponAsset,setClipboard:()=>setClipboard,setMenuOptions:()=>setMenuOptions,setVehicleProperties:()=>setVehicleProperties,showContext:()=>showContext,showMenu:()=>showMenu,showTextUI:()=>showTextUI,skillCheck:()=>skillCheck,skillCheckActive:()=>skillCheckActive,triggerServerCallback:()=>triggerServerCallback});var alertDialog=async data=>await exports.ox_lib.alertDialog(data);var closeAlertDialog=()=>exports.ox_lib.closeAlertDialog();var setClipboard=value=>exports.ox_lib.setClipboard(value);var registerContext=context=>exports.ox_lib.registerContext(context);var showContext=id=>exports.ox_lib.showContext(id);var hideContext=onExit=>exports.ox_lib.hideContext(onExit);var getOpenContextMenu=()=>exports.ox_lib.getOpenContextMenu();var inputDialog=async(heading,rows)=>await exports.ox_lib.inputDialog(heading,rows);var closeInputDialog=()=>exports.ox_lib.closeInputDialog();var registerMenu=(data,cb)=>exports.ox_lib.registerMenu(data,cb);var showMenu=id=>exports.ox_lib.showMenu(id);var hideMenu=onExit=>exports.ox_lib.hideMenu(onExit);var getOpenMenu=()=>exports.ox_lib.getOpenMenu();var setMenuOptions=(id,options,index)=>exports.ox_lib.setMenuOptions(id,options,index);var notify=data=>exports.ox_lib.notify(data);var defaultNotify=data=>exports.ox_lib.defaultNotify(data);var progressBar=async data=>exports.ox_lib.progressBar(data);var progressCircle=async data=>exports.ox_lib.progressCircle(data);var progressActive=()=>exports.ox_lib.progressActive();var cancelProgress=()=>exports.ox_lib.cancelProgress();var showTextUI=(text,options)=>exports.ox_lib.showTextUI(text,options);var hideTextUI=()=>exports.ox_lib.hideTextUI();var isTextUIOpen=()=>exports.ox_lib.isTextUIOpen();var skillCheck=(difficulty,inputs)=>exports.ox_lib.skillCheck(difficulty);var skillCheckActive=()=>exports.ox_lib.skillCheckActive();var cancelSkillCheck=()=>exports.ox_lib.cancelSkillCheck();var addRadialItem=items=>exports.ox_lib.addRadialItem(items);var removeRadialItem=item=>exports.ox_lib.removeRadialItem(item);var registerRadial=radial=>exports.ox_lib.registerRadial(radial);var getCurrentRadialId=()=>exports.ox_lib.getCurrentRadialId();var hideRadial=()=>exports.ox_lib.hideRadial();var disableRadial=state=>exports.ox_lib.disableRadial(state);async function streamingRequest(request,hasLoaded,assetType,asset,timeout,...args){if(hasLoaded(asset))return asset;request(asset,...args);waitFor(()=>{if(hasLoaded(asset))return asset},`failed to load ${assetType} '${asset}' after ${timeout} ticks`,timeout||500)}var requestAnimDict=(animDict,timeout)=>{if(!DoesAnimDictExist(animDict))throw new Error(`attempted to load invalid animDict '${animDict}'`);return streamingRequest(RequestAnimDict,HasAnimDictLoaded,"animDict",animDict,timeout)};var requestAnimSet=(animSet,timeout)=>streamingRequest(RequestAnimSet,HasAnimSetLoaded,"animSet",animSet,timeout);var requestModel=(model,timeout)=>{if(typeof model!=="number")model=GetHashKey(model);if(!IsModelValid(model))throw new Error(`attempted to load invalid model '${model}'`);return streamingRequest(RequestModel,HasModelLoaded,"model",model,timeout)};var requestNamedPtfxAsset=(ptFxName,timeout)=>streamingRequest(RequestNamedPtfxAsset,HasNamedPtfxAssetLoaded,"ptFxName",ptFxName,timeout);var requestScaleformMovie=(scaleformName,timeout)=>streamingRequest(RequestScaleformMovie,HasScaleformMovieLoaded,"scaleformMovie",scaleformName,timeout);var requestStreamedTextureDict=(textureDict,timeout)=>streamingRequest(RequestStreamedTextureDict,HasStreamedTextureDictLoaded,"textureDict",textureDict,timeout);var requestWeaponAsset=(weaponHash,timeout,weaponResourceFlags=31,extraWeaponComponentFlags=0)=>streamingRequest(RequestWeaponAsset,HasWeaponAssetLoaded,"weaponHash",weaponHash,timeout,weaponResourceFlags,extraWeaponComponentFlags);var getVehicleProperties=vehicle=>exports.ox_lib.getVehicleProperties(vehicle);var setVehicleProperties=(vehicle,props,fixVehicle)=>exports.ox_lib.setVehicleProperties(vehicle,props);var cache=new Proxy({resource:GetCurrentResourceName()},{get(target,key){const result=key?target[key]:target;if(result!==void 0)return result;AddEventHandler(`ox_lib:cache:${key}`,value=>{target[key]=value});target[key]=exports.ox_lib.cache(key)||false;return target[key]}});var import_fast_printf=__toESM(require_printf());var dict={};function flattenDict(source,target,prefix){for(const key in source){const fullKey=prefix?`${prefix}.${key}`:key;const value=source[key];if(typeof value==="object")flattenDict(value,target,fullKey);else target[fullKey]=String(value)}return target}var initLocale=()=>{const lang=GetConvar("ox:locale","en");let locales=JSON.parse(LoadResourceFile(cache.resource,`locales/${lang}.json`));if(!locales){console.warn(`could not load 'locales/${lang}.json'`);if(lang!=="en"){locales=JSON.parse(LoadResourceFile(cache.resource,"locales/en.json"));if(!locales){console.warn(`could not load 'locales/en.json'`)}}if(!locales)return}const flattened=flattenDict(locales,{});for(let[k,v]of Object.entries(flattened)){if(typeof v==="string"){const regExp=new RegExp(/\$\{([^}]+)\}/g);const matches=v.match(regExp);if(matches){for(const match of matches){if(!match)break;const variable=match.substring(2,match.length-1);let locale=flattened[variable];if(locale){v=v.replace(match,locale)}}}}dict[k]=v}};initLocale();async function waitFor(cb,errMessage,timeout){let value=await cb();if(value!==void 0)return value;if(timeout||timeout==null){if(typeof timeout!=="number")timeout=1e3;if(IsDuplicityVersion())timeout/=50;else timeout-=GetFrameTime()*1e3}const start=GetGameTimer();let id;let i=0;const p=new Promise((resolve,reject)=>{id=setTick(async()=>{if(timeout){i++;if(i>timeout)return reject(`${errMessage||"failed to resolve callback"} (waited ${(GetGameTimer()-start)/1e3}ms)`)}value=await cb();if(value!==void 0)resolve(value)})}).finally(()=>clearTick(id));return p}cache.playerId=PlayerId();cache.serverId=GetPlayerServerId(cache.playerId);var activeEvents={};onNet(`__ox_cb_${cache.resource}`,(key,...args)=>{const resolve=activeEvents[key];return resolve&&resolve(...args)});var eventTimers={};function eventTimer(eventName,delay){if(delay&&delay>0){const currentTime=GetGameTimer();if((eventTimers[eventName]||0)>currentTime)return false;eventTimers[eventName]=currentTime+delay}return true}function triggerServerCallback(eventName,delay,...args){if(!eventTimer(eventName,delay))return;let key;do{key=`${eventName}:${Math.floor(Math.random()*(1e5+1))}`}while(activeEvents[key]);emitNet(`__ox_cb_${eventName}`,cache.resource,key,...args);return new Promise(resolve=>{activeEvents[key]=resolve})}function onServerCallback(eventName,cb){onNet(`__ox_cb_${eventName}`,async(resource,key,...args)=>{let response;try{response=await cb(...args)}catch(e){console.error(`an error occurred while handling callback event ${eventName}`);console.log(`^3${e.stack}^0`)}emitNet(`__ox_cb_${resource}`,key,response)})}var Vector3=class _Vector3{constructor(x,y,z){this.x=x;this.y=y;this.z=z}static create(v1){if(typeof v1==="number")return new _Vector3(v1,v1,v1);return new _Vector3(v1.x,v1.y,v1.z)}static fromArray(primitive){return new _Vector3(primitive[0],primitive[1],primitive[2])}static fromArrays(primitives){return primitives.map(prim=>new _Vector3(prim[0],prim[1],prim[2]))}static clone(v1){return _Vector3.create(v1)}static add(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x+v2,v1.y+v2,v1.z+v2);return new _Vector3(v1.x+v2.x,v1.y+v2.y,v1.z+v2.z)}static addX(vec,x){return new _Vector3(vec.x+x,vec.y,vec.z)}static addY(vec,y){return new _Vector3(vec.x,vec.y+y,vec.z)}static addZ(vec,z){return new _Vector3(vec.x,vec.y,vec.z+z)}static subtract(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x-v2,v1.y-v2,v1.z-v2);return new _Vector3(v1.x-v2.x,v1.y-v2.y,v1.z-v2.z)}static multiply(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x*v2,v1.y*v2,v1.z*v2);return new _Vector3(v1.x*v2.x,v1.y*v2.y,v1.z*v2.z)}static divide(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x/v2,v1.y/v2,v1.z/v2);return new _Vector3(v1.x/v2.x,v1.y/v2.y,v1.z/v2.z)}static dotProduct(v1,v2){return v1.x*v2.x+v1.y*v2.y+v1.z*v2.z}static crossProduct(v1,v2){const x=v1.y*v2.z-v1.z*v2.y;const y=v1.z*v2.x-v1.x*v2.z;const z=v1.x*v2.y-v1.y*v2.x;return new _Vector3(x,y,z)}static normalize(v){return _Vector3.divide(v,v.Length)}clone(){return new _Vector3(this.x,this.y,this.z)}distanceSquared(v){const w=this.subtract(v);return _Vector3.dotProduct(w,w)}distance(v){return Math.sqrt(this.distanceSquared(v))}get normalize(){return _Vector3.normalize(this)}crossProduct(v){return _Vector3.crossProduct(this,v)}dotProduct(v){return _Vector3.dotProduct(this,v)}add(v){return _Vector3.add(this,v)}addX(x){return _Vector3.addX(this,x)}addY(y){return _Vector3.addY(this,y)}addZ(z){return _Vector3.addZ(this,z)}subtract(v){return _Vector3.subtract(this,v)}multiply(v){return _Vector3.multiply(this,v)}divide(v){return _Vector3.divide(this,v)}toArray(){return[this.x,this.y,this.z]}replace(v){this.x=v.x;this.y=v.y;this.z=v.z}get Length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}};Vector3.Zero=new Vector3(0,0,0);var points=[];var nearbyPoints=[];var nearbyCount=0;var closestPoint;var tick;var pointsInterval;var Point=class{constructor(point){this.id=0;this.distance=0;this.inside=false;this.isClosest=false;this.remove=()=>{const coords=Vector3.fromArray(GetEntityCoords(cache.ped,false));const distance=coords.distance(this.coords);if(distance<this.distance){nearbyCount-=1;nearbyPoints=nearbyPoints.filter(point2=>point2.id!==this.id);if(nearbyCount===0&&tick){clearTick(tick);tick=void 0}}points=points.filter(point2=>point2.id!==this.id);if(points.length===0){clearInterval(pointsInterval)}};this.id=points.length+1;this.coords=Vector3.fromArray(point.coords);this.distance=point.distance;this.onEnter=point.onEnter;this.onExit=point.onExit;this.nearby=point.nearby;this.args=point.args;points.push(this);if(points.length===1){startPointsInterval()}}};var startPointsInterval=()=>{pointsInterval=setInterval(()=>{if(points.length<1)return;if(nearbyCount!==0){nearbyPoints=[];nearbyCount=0}const coords=Vector3.fromArray(GetEntityCoords(cache.ped,false));if(closestPoint&&coords.distance(closestPoint.coords)>closestPoint.distance){closestPoint=void 0}for(let i=0;i<points.length;i++){const point=points[i];const distance=coords.distance(point.coords);if(distance<=point.distance){point.currentDistance=distance;if(closestPoint&&closestPoint.currentDistance){if(distance<closestPoint.currentDistance){closestPoint.isClosest=false;point.isClosest=true;closestPoint=point}}else if(distance<point.distance){point.isClosest=true;closestPoint=point}if(point.nearby){nearbyCount++;nearbyPoints[nearbyCount-1]=point}if(point.onEnter&&!point.inside){point.inside=true;point.onEnter()}}else if(point.currentDistance){if(point.onExit)point.onExit();point.inside=false;point.currentDistance=void 0}}if(!tick){if(nearbyCount!==0){tick=setTick(()=>{for(let i=0;i<nearbyCount;i++){const point=nearbyPoints[i];if(point&&point.nearby){point.nearby()}}})}}else if(nearbyCount===0){clearTick(tick);tick=void 0}},300)};var client_default=resource_exports;on("moss:client:useBarrel",()=>{emitNet("moss:server:spawnBarrel",GetPropPos(.5))});onNet("moss:client:setupBarrel",async netID=>{while(!NetworkDoesEntityExistWithNetworkId(netID)){await Delay(100);console.debug(`Waiting for barrel with netid: ${netID}`)}global.exports.ox_target.addEntity(netID,[{name:"dismantle",label:"Dismantle",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return!Entity(entity).state.sealed||Entity(entity).state.progress==100},onSelect:data=>{emitNet("moss:server:dismantleBarrel",NetworkGetNetworkIdFromEntity(data.entity))}},{name:"check_barrel",label:"Check Progress",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return Entity(entity).state.sealed},onSelect:data=>{client_default.notify({title:"Progress",description:`${Entity(data.entity).state.progress}%`,type:"success"})}},{name:"open_barrel",label:"Open Barrel",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return!Entity(entity).state.sealed&&Entity(entity).state.progress==0},onSelect:data=>{global.exports.ox_inventory.openInventory("stash",`barrel_${netID}`)}},{name:"seal_barrel",label:"Seal Barrel",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return!Entity(entity).state.sealed},onSelect:data=>{emitNet("moss:server:sealBarrel",NetworkGetNetworkIdFromEntity(data.entity))}}])});var NPC=null;var BLIP=null;var[npcX,npcY,npcZ,npcH]=[959.7,3619.09,31.68,89.08];var Cancel=()=>{LocalPlayer.state.moonshineActive=false;LocalPlayer.state.moonshineRecipe=null};var Setup=async()=>{const hash=GetHashKey("S_M_M_CntryBar_01");while(!HasModelLoaded(hash)){RequestModel(hash);await Delay(1e3)}NPC=CreatePed(0,hash,npcX,npcY,npcZ,npcH,false,true);FreezeEntityPosition(NPC,true);SetEntityInvincible(NPC,true);SetBlockingOfNonTemporaryEvents(NPC,true);PlaceObjectOnGroundProperly(NPC);BLIP=AddBlipForCoord(npcX,npcY,npcZ);SetBlipSprite(BLIP,827);SetBlipDisplay(BLIP,2);SetBlipScale(BLIP,.75);SetBlipColour(BLIP,27);BeginTextCommandSetBlipName("STRING");AddTextComponentSubstringPlayerName("Moonshine");EndTextCommandSetBlipName(BLIP);global.exports.ox_target.addLocalEntity(NPC,[{name:"request",label:"Request Job",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return!LocalPlayer.state.moonshineActive},event:"moss:client:requestJob"},{name:"return",label:"Deliver Moonshine",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return LocalPlayer.state.moonshineActive},event:"moss:client:deliver"},{name:"cancel",label:"Cancel Job",distance:2,canInteract:(entity,distance,coords,name,bone)=>{return LocalPlayer.state.moonshineActive},onSelect:data=>{Cancel()}}])};on("moss:client:requestJob",async()=>{const success=await client_default.alertDialog({header:"Eric 'Digger' Manes",content:"I got a client waiting on a batch of shine, they have asked for a very specific recipe and will buy as many jars as your run produces. I have written the recipe down on this sticky note. It contains the ingredient ratio the client has requested.\n\n**Requirements**\n 1. Plastic Barrel\n 2. Still\n 3. Mason jars\n 4. Corn\n 5. Sugar\n 6. Yeast\n 7. Water\n\n**HOW TO**\n1. Take a plastic barrel and fill it with the ingredients on the sticky note.\n2. Seal the barrel\n3. Wait for the fermentation process to finish.\n4. Once finished pickup the barrel and load it in the still with a box of mason jars.\n5. Light the still and wait for the distillation process to finish\n6. Deliver the shine back to me."});if(success==="cancel"){return}const response=await triggerServerCallback("moss:server:requestRecipe",0);if(!response){console.error("Something went wrong getting a recipe from the server");return}LocalPlayer.state.moonshineActive=true;LocalPlayer.state.moonshineRecipe=response});on("moss:client:deliver",()=>{const inventory=global.exports.ox_inventory.GetSlotsWithItem("moonshine");let slots=[];for(const k in inventory){const shine=inventory[k];if(shine.metadata.recipe_data.corn===LocalPlayer.state.moonshineRecipe.corn&&shine.metadata.recipe_data.water===LocalPlayer.state.moonshineRecipe.water&&shine.metadata.recipe_data.yeast===LocalPlayer.state.moonshineRecipe.yeast&&shine.metadata.recipe_data.sugar===LocalPlayer.state.moonshineRecipe.sugar){slots.push(shine.slot)}}if(slots.length<1){client_default.notify({title:"This isn't correct",type:"error"});return}emitNet("moss:server:deliverShine",slots);Cancel()});on("QBCore:Client:OnPlayerLoaded",async res=>{await Setup()});on("onResourceStart",async res=>{if(res!==GetCurrentResourceName())return;await Setup()});on("onResourceStop",res=>{if(res!==GetCurrentResourceName())return;if(NPC){DeleteEntity(NPC)}if(BLIP){RemoveBlip(BLIP)}});onNet("moss:client:notify",data=>{client_default.notify(data)});on("onResourceStart",res=>{if(res!==GetCurrentResourceName())return;global.exports.ox_inventory.displayMetadata({recipe:"Recipe"})});})();
